/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 10000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 20.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("data_read")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DATA_RX")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DONE_RX")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("FR_Read")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("new_FR_RX")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("nrst")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("num_pairs_RX")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("num_pairs_RX[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "num_pairs_RX";
}

SIGNAL("num_pairs_RX[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "num_pairs_RX";
}

SIGNAL("num_pairs_RX[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "num_pairs_RX";
}

SIGNAL("RDY_RX")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Ready_to_Tx")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("rx_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("rx_data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rx_data";
}

SIGNAL("rx_data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rx_data";
}

SIGNAL("rx_data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rx_data";
}

SIGNAL("rx_data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rx_data";
}

SIGNAL("rx_data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rx_data";
}

SIGNAL("rx_data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rx_data";
}

SIGNAL("rx_data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rx_data";
}

SIGNAL("rx_data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "rx_data";
}

SIGNAL("rx_new")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("send")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("serial")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("TX_DONE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("TX_DT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("tx_empty")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("tx_num_pairs")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("tx_num_pairs[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "tx_num_pairs";
}

SIGNAL("tx_num_pairs[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "tx_num_pairs";
}

SIGNAL("tx_num_pairs[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "tx_num_pairs";
}

SIGNAL("TX_RDY")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 500;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("data_read")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1117.175;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1040.299;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1899.701;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1040.299;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1719.701;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1040.299;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1060.178;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 942.348;
	}
}

TRANSITION_LIST("DATA_RX")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9076.555;
		LEVEL 1 FOR 923.445;
	}
}

TRANSITION_LIST("DONE_RX")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5216.347;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 4463.653;
	}
}

TRANSITION_LIST("FR_Read")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2560.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 4400.0;
	}
}

TRANSITION_LIST("new_FR_RX")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2236.556;
		LEVEL 1 FOR 340.0;
		LEVEL 0 FOR 2640.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 3540.0;
		LEVEL 1 FOR 923.444;
	}
}

TRANSITION_LIST("nrst")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 9980.0;
	}
}

TRANSITION_LIST("num_pairs_RX[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("num_pairs_RX[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9056.337;
		LEVEL 1 FOR 943.663;
	}
}

TRANSITION_LIST("num_pairs_RX[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9056.335;
		LEVEL 1 FOR 943.665;
	}
}

TRANSITION_LIST("RDY_RX")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2236.349;
		LEVEL 1 FOR 340.0;
		LEVEL 0 FOR 7423.651;
	}
}

TRANSITION_LIST("Ready_to_Tx")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 96.406;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 820.0;
		LEVEL 0 FOR 2160.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 3220.0;
		LEVEL 1 FOR 903.594;
	}
}

TRANSITION_LIST("rx_data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 996.797;
		LEVEL 1 FOR 7920.0;
		LEVEL 0 FOR 1083.203;
	}
}

TRANSITION_LIST("rx_data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("rx_data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 796.587;
		LEVEL 1 FOR 7920.0;
		LEVEL 0 FOR 1283.413;
	}
}

TRANSITION_LIST("rx_data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7536.57;
		LEVEL 1 FOR 1080.0;
		LEVEL 0 FOR 1383.43;
	}
}

TRANSITION_LIST("rx_data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 596.591;
		LEVEL 1 FOR 1060.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 1060.0;
		LEVEL 0 FOR 1740.0;
		LEVEL 1 FOR 1060.0;
		LEVEL 0 FOR 2563.409;
	}
}

TRANSITION_LIST("rx_data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("rx_data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 396.807;
		LEVEL 1 FOR 1060.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 3860.0;
		LEVEL 0 FOR 1080.0;
		LEVEL 1 FOR 1683.193;
	}
}

TRANSITION_LIST("rx_data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1356.337;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 1060.0;
		LEVEL 1 FOR 1740.0;
		LEVEL 0 FOR 1060.0;
		LEVEL 1 FOR 2863.663;
	}
}

TRANSITION_LIST("rx_new")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1096.627;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 1020.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 1880.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 1020.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 1700.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 1020.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 1040.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 943.373;
	}
}

TRANSITION_LIST("send")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 96.975;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1040.293;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1899.707;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1040.293;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1719.707;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1040.293;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1060.074;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1962.658;
	}
}

TRANSITION_LIST("serial")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 137.453;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1120.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 940.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 1042.547;
	}
}

TRANSITION_LIST("TX_DONE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3040.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 6940.0;
	}
}

TRANSITION_LIST("TX_DT")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5840.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 4080.0;
	}
}

TRANSITION_LIST("tx_empty")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 116.385;
		LEVEL 0 FOR 1020.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 1020.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 1020.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 1020.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 1020.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 1020.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 1020.0;
		LEVEL 1 FOR 943.615;
	}
}

TRANSITION_LIST("tx_num_pairs[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("tx_num_pairs[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10000.0;
	}
}

TRANSITION_LIST("tx_num_pairs[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10000.0;
	}
}

TRANSITION_LIST("TX_RDY")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 9920.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nrst";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "TX_RDY";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "TX_DONE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "TX_DT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Ready_to_Tx";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "send";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "tx_empty";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "serial";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "tx_num_pairs";
	EXPAND_STATUS = EXPANDED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "tx_num_pairs[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "tx_num_pairs[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "tx_num_pairs[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "rx_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
	CHILDREN = 14, 15, 16, 17, 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "rx_data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "rx_data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "rx_data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "rx_data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "rx_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "rx_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "rx_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "rx_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "rx_new";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data_read";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "new_FR_RX";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "num_pairs_RX";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
	CHILDREN = 26, 27, 28;
}

DISPLAY_LINE
{
	CHANNEL = "num_pairs_RX[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "num_pairs_RX[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "num_pairs_RX[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "FR_Read";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RDY_RX";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DONE_RX";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_RX";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 32;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 12000;
	MASTER = TRUE;
}
;
